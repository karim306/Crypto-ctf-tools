from Crypto.Util.number import inverse,long_to_bytes

import binascii



p = 12328873122677502124841121589127215390608242426843294594224090464591256536330626628820511424912523162699187480475556629339743450549864259456104583791920427

q = 9381301557862350745677687868984930432330123535013448699023640252770244252097436072732682164463826937866959692121269543223528012935331324823433943901910607

n =  p * q
# ct = 89324045690602869481652658486351339869198672768736701592429212304314533347858594205757446218939914303967856123839679139473271834304062869248490565974410595134225264907338201163806547498645818214774799223745778571520715284454812557151032292363465413074728466451907769449253663046303316417858104680022166905974

e = 65537
c = 89324045690602869481652658486351339869198672768736701592429212304314533347858594205757446218939914303967856123839679139473271834304062869248490565974410595134225264907338201163806547498645818214774799223745778571520715284454812557151032292363465413074728466451907769449253663046303316417858104680022166905974
phi = (p-1) * (q-1)

d = inverse(e, phi)

plainText = pow(c,  d, n)

print (long_to_bytes(plainText))